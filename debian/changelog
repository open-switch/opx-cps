opx-cps (3.6.2+opx5) unstable; urgency=medium

  * Update: Update connection cache on registering connectivity group events 
            and reduce the audit time to update connection caches from 1 min to 3 secs
  * Update: Add support to parse and set cps library flags from platform specific XML files
  * Update: Remove redundant API - load_aliases() API is primarily used to fill _alias_map 
            which is a map between node name and its IP address. This functionality is anyways 
            fulfilled by load_group() API. Hence removing the redundant function
  * Bugfix: Bug-Not able to configure vlt-port-channel in Primary, Fix-Create stunnel for IPv6 loopback address
  * Update: Connectivity agent to establish/maintain tunnel connectivity between nodes in case of multi-node communication
  * Bugfix: Conditional assert in case of events publish failure
  * Update: Switch to common-util con-var timed wait and avoid nanosec overflow failure
  * Update: Add additional error handling around syncing data to the REDIS socket. Add a timeout check to the drain connections 
            to ensure we don't miss events and updating the size when we switch connections mid flight in processing events.
  * Update: Modify the event service to use the std_mutex and add additional error handling around failure to aquire locks. 
            This should ensure more stable error handling when we are doing things at high speed/low resources
  * Update: Yang tool Support Yang Model names with 'nvo' prefix
  * Update: Python hooks for cps get/set library flags
  * Update: Modify logging to make troubleshooting easier
  * Update: Fix API to set tune parameters
  * Update: Add additional logging for publishing event thread events

 -- Dell EMC <ops-dev@lists.openswitch.net>  Tue, 23 May 2018 01:00:13 -0700

opx-cps (3.6.2+opx4) unstable; urgency=medium

  * Update: Restore yang:mac-address to base type which is string
  * Update: Checking for a valid _ctx before accessing REDIS functions in cases where it is invalid/null
  * Update: Adding configuration of pipeline parameters
  * Update: Increase the number of cached connections to 6
  * Update: Added missing unit test
  * Update: Updated name of flags API to avoid conflict between C/C++
  * Update: Updates to the parser to reduce relocation tables
  * Update: Add return code value for communication error

 -- Dell EMC <ops-dev@lists.openswitch.net>  Tue, 13 Feb 2018 01:00:13 -0700

opx-cps (3.6.2+opx3) unstable; urgency=medium

  * Bugfix: Fix 'Key Error: 0' in cps_utils.printable(), fill "None" in case of empty byte array

 -- Dell EMC <ops-dev@lists.openswitch.net>  Fri, 16 Feb 2018 11:59:13 -0700

opx-cps (3.6.2+opx2) unstable; urgency=medium

  * Update: Log cps_get_oid.py output as readable name instead of key

 -- Dell EMC <ops-dev@lists.openswitch.net>  Fri, 09 Feb 2018 01:00:13 -0700

opx-cps (3.6.2+opx1) unstable; urgency=medium

  * Update: Adding a unit test to validate no lost messages

 -- Dell EMC <ops-dev@lists.openswitch.net>  Fri, 14 Jan 2018 09:32:13 -0700

opx-cps (3.6.2) unstable; urgency=medium

  * Update: Validate duplicate ids
  * Update: Unique pid file for each stunnel client
  * Update: Correctly handle return of str.find
  * Update: Fixed logging format
  * Update: Updating support for category files - if exist use them - otherwise don't create/update.
  * Update: Updates to the object history - as we parse history files track used ID
  * Update: Remove src address check from reconcile since source object is obtained as an input and not fetched from DB
  * Update: cps_api_get() will return the error code sent by the server
  * Update: Allow leaf-list filter for cps get

 -- Dell EMC <ops-dev@lists.openswitch.net>  Fri, 12 Dec 2017 09:32:13 -0700

opx-cps (3.6.1) unstable; urgency=medium

  * Update: Yang parser now supports yang 1.1 and signifiatnely more yang constructs
  * Update: CPS_PARSER_CACHE added for faster yang parsing
  * Update: Adding error logs and debug logs to help troubleshoot event disconnect issues in the field (debug as well). Ignore read timeout when getting events as they may be false positives due to event_thread behaviour of waiting for events as registrations are being sent across socket.
  * Update: cps_get_oid.py and other script updates to better print disovered objects
  * Update: Adding new utility file for connection status/caching
  * Update: Updates for connection caching for db connections
  * Update: Additional support for distributed CPS with performance updates

 -- Clifford Wichmann <cwichmann@force10networks.com>  Fri, 29 Sep 2017 13:49:48 -0700

opx-cps (3.6.0) unstable; urgency=medium

  * Update: CPS Event Optimizations
  * Update: Sync API to compare/update CPS Objects between nodes
  * Update: Adding new interface for storing into DB running/startup
  * Bugfix: Updates from static globals to pointers for thread shutdown
  * Update: Adding new service-instance statistics along with dumping memory usage

 -- Dell EMC <ops-dev@lists.openswitch.net>  Mon, 19 June 2017 13:42:13 -0700

opx-cps (1.0.1) unstable; urgency=medium

  * Initial release.

 -- Dell EMC <ops-dev@lists.openswitch.net>  Wed, 01 Feb 2017 09:43:54 -0800
